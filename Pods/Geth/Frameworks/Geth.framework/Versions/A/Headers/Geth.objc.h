// Objective-C API for talking to github.com/ethereum/go-ethereum/mobile Go package.
//   gobind -lang=objc github.com/ethereum/go-ethereum/mobile
//
// File is generated by gobind. Do not edit.

#ifndef __Geth_H__
#define __Geth_H__

@import Foundation;
#include "Universe.objc.h"


@class GethAccount;
@class GethAccounts;
@class GethAddress;
@class GethAddresses;
@class GethBigInt;
@class GethBigInts;
@class GethBlock;
@class GethBloom;
@class GethBoundContract;
@class GethCallMsg;
@class GethCallOpts;
@class GethContext;
@class GethEnode;
@class GethEnodes;
@class GethEthereumClient;
@class GethFilterQuery;
@class GethHash;
@class GethHashes;
@class GethHeader;
@class GethHeaders;
@class GethInterface;
@class GethInterfaces;
@class GethKeyStore;
@class GethLog;
@class GethLogs;
@class GethNode;
@class GethNodeConfig;
@class GethNodeInfo;
@class GethNonce;
@class GethPeerInfo;
@class GethPeerInfos;
@class GethReceipt;
@class GethStrings;
@class GethSubscription;
@class GethSyncProgress;
@class GethTopics;
@class GethTransactOpts;
@class GethTransaction;
@class GethTransactions;
@protocol GethFilterLogsHandler;
@class GethFilterLogsHandler;
@protocol GethNewHeadHandler;
@class GethNewHeadHandler;
@protocol GethSigner;
@class GethSigner;

@protocol GethFilterLogsHandler <NSObject>
- (void)onError:(NSString*)failure;
- (void)onFilterLogs:(GethLog*)log;
@end

@protocol GethNewHeadHandler <NSObject>
- (void)onError:(NSString*)failure;
- (void)onNewHead:(GethHeader*)header;
@end

@protocol GethSigner <NSObject>
- (GethTransaction*)sign:(GethAddress*)p0 p1:(GethTransaction*)p1 error:(NSError**)error;
@end

@interface GethAccount : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (GethAddress*)getAddress;
- (NSString*)getURL;
@end

@interface GethAccounts : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (GethAccount*)get:(long)index error:(NSError**)error;
- (BOOL)set:(long)index account:(GethAccount*)account error:(NSError**)error;
- (long)size;
@end

@interface GethAddress : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)initFromBytes:(NSData*)binary;
- (instancetype)initFromHex:(NSString*)hex;
- (NSData*)getBytes;
- (NSString*)getHex;
- (BOOL)setBytes:(NSData*)address error:(NSError**)error;
- (BOOL)setHex:(NSString*)address error:(NSError**)error;
@end

@interface GethAddresses : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init:(long)size;
- (instancetype)initEmpty;
- (void)append:(GethAddress*)address;
- (GethAddress*)get:(long)index error:(NSError**)error;
- (BOOL)set:(long)index address:(GethAddress*)address error:(NSError**)error;
- (long)size;
@end

@interface GethBigInt : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init:(int64_t)x;
- (NSData*)getBytes;
- (int64_t)getInt64;
- (NSString*)getString:(long)base;
- (void)setBytes:(NSData*)buf;
- (void)setInt64:(int64_t)x;
- (void)setString:(NSString*)x base:(long)base;
- (long)sign;
- (NSString*)string;
@end

@interface GethBigInts : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (GethBigInt*)get:(long)index error:(NSError**)error;
- (BOOL)set:(long)index bigint:(GethBigInt*)bigint error:(NSError**)error;
- (long)size;
@end

@interface GethBlock : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)initFromJSON:(NSString*)data;
- (instancetype)initFromRLP:(NSData*)data;
- (NSString*)encodeJSON:(NSError**)error;
- (NSData*)encodeRLP:(NSError**)error;
- (GethBloom*)getBloom;
- (GethAddress*)getCoinbase;
- (GethBigInt*)getDifficulty;
- (NSData*)getExtra;
- (int64_t)getGasLimit;
- (int64_t)getGasUsed;
- (GethHash*)getHash;
- (GethHash*)getHashNoNonce;
- (GethHeader*)getHeader;
- (GethHash*)getMixDigest;
- (int64_t)getNonce;
- (int64_t)getNumber;
- (GethHash*)getParentHash;
- (GethHash*)getReceiptHash;
- (GethHash*)getRoot;
- (int64_t)getTime;
- (GethTransaction*)getTransaction:(GethHash*)hash;
- (GethTransactions*)getTransactions;
- (GethHash*)getTxHash;
- (GethHash*)getUncleHash;
- (GethHeaders*)getUncles;
- (NSString*)string;
@end

@interface GethBloom : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (NSData*)getBytes;
- (NSString*)getHex;
@end

@interface GethBoundContract : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (BOOL)call:(GethCallOpts*)opts out_:(GethInterfaces*)out_ method:(NSString*)method args:(GethInterfaces*)args error:(NSError**)error;
- (GethAddress*)getAddress;
- (GethTransaction*)getDeployer;
- (GethTransaction*)transact:(GethTransactOpts*)opts method:(NSString*)method args:(GethInterfaces*)args error:(NSError**)error;
- (GethTransaction*)transfer:(GethTransactOpts*)opts error:(NSError**)error;
@end

@interface GethCallMsg : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (NSData*)getData;
- (GethAddress*)getFrom;
- (int64_t)getGas;
- (GethBigInt*)getGasPrice;
- (GethAddress*)getTo;
- (GethBigInt*)getValue;
- (void)setData:(NSData*)data;
- (void)setFrom:(GethAddress*)address;
- (void)setGas:(int64_t)gas;
- (void)setGasPrice:(GethBigInt*)price;
- (void)setTo:(GethAddress*)address;
- (void)setValue:(GethBigInt*)value;
@end

@interface GethCallOpts : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (int64_t)getGasLimit;
- (BOOL)isPending;
- (void)setContext:(GethContext*)context;
- (void)setGasLimit:(int64_t)limit;
- (void)setPending:(BOOL)pending;
@end

@interface GethContext : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (GethContext*)withCancel;
- (GethContext*)withDeadline:(int64_t)sec nsec:(int64_t)nsec;
- (GethContext*)withTimeout:(int64_t)nsec;
@end

@interface GethEnode : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init:(NSString*)rawurl;
@end

@interface GethEnodes : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init:(long)size;
- (instancetype)initEmpty;
- (void)append:(GethEnode*)enode;
- (GethEnode*)get:(long)index error:(NSError**)error;
- (BOOL)set:(long)index enode:(GethEnode*)enode error:(NSError**)error;
- (long)size;
@end

@interface GethEthereumClient : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init:(NSString*)rawurl;
- (NSData*)callContract:(GethContext*)ctx msg:(GethCallMsg*)msg number:(int64_t)number error:(NSError**)error;
- (BOOL)estimateGas:(GethContext*)ctx msg:(GethCallMsg*)msg gas:(int64_t*)gas error:(NSError**)error;
- (GethLogs*)filterLogs:(GethContext*)ctx query:(GethFilterQuery*)query error:(NSError**)error;
- (GethBigInt*)getBalanceAt:(GethContext*)ctx account:(GethAddress*)account number:(int64_t)number error:(NSError**)error;
- (GethBlock*)getBlockByHash:(GethContext*)ctx hash:(GethHash*)hash error:(NSError**)error;
- (GethBlock*)getBlockByNumber:(GethContext*)ctx number:(int64_t)number error:(NSError**)error;
- (NSData*)getCodeAt:(GethContext*)ctx account:(GethAddress*)account number:(int64_t)number error:(NSError**)error;
- (GethHeader*)getHeaderByHash:(GethContext*)ctx hash:(GethHash*)hash error:(NSError**)error;
- (GethHeader*)getHeaderByNumber:(GethContext*)ctx number:(int64_t)number error:(NSError**)error;
- (BOOL)getNonceAt:(GethContext*)ctx account:(GethAddress*)account number:(int64_t)number nonce:(int64_t*)nonce error:(NSError**)error;
- (GethBigInt*)getPendingBalanceAt:(GethContext*)ctx account:(GethAddress*)account error:(NSError**)error;
- (NSData*)getPendingCodeAt:(GethContext*)ctx account:(GethAddress*)account error:(NSError**)error;
- (BOOL)getPendingNonceAt:(GethContext*)ctx account:(GethAddress*)account nonce:(int64_t*)nonce error:(NSError**)error;
- (NSData*)getPendingStorageAt:(GethContext*)ctx account:(GethAddress*)account key:(GethHash*)key error:(NSError**)error;
- (BOOL)getPendingTransactionCount:(GethContext*)ctx count:(long*)count error:(NSError**)error;
- (NSData*)getStorageAt:(GethContext*)ctx account:(GethAddress*)account key:(GethHash*)key number:(int64_t)number error:(NSError**)error;
- (GethTransaction*)getTransactionByHash:(GethContext*)ctx hash:(GethHash*)hash error:(NSError**)error;
- (BOOL)getTransactionCount:(GethContext*)ctx hash:(GethHash*)hash count:(long*)count error:(NSError**)error;
- (GethTransaction*)getTransactionInBlock:(GethContext*)ctx hash:(GethHash*)hash index:(long)index error:(NSError**)error;
- (GethReceipt*)getTransactionReceipt:(GethContext*)ctx hash:(GethHash*)hash error:(NSError**)error;
- (GethAddress*)getTransactionSender:(GethContext*)ctx tx:(GethTransaction*)tx blockhash:(GethHash*)blockhash index:(long)index error:(NSError**)error;
- (NSData*)pendingCallContract:(GethContext*)ctx msg:(GethCallMsg*)msg error:(NSError**)error;
- (BOOL)sendTransaction:(GethContext*)ctx tx:(GethTransaction*)tx error:(NSError**)error;
- (GethSubscription*)subscribeFilterLogs:(GethContext*)ctx query:(GethFilterQuery*)query handler:(id<GethFilterLogsHandler>)handler buffer:(long)buffer error:(NSError**)error;
- (GethSubscription*)subscribeNewHead:(GethContext*)ctx handler:(id<GethNewHeadHandler>)handler buffer:(long)buffer error:(NSError**)error;
- (GethBigInt*)suggestGasPrice:(GethContext*)ctx error:(NSError**)error;
- (GethSyncProgress*)syncProgress:(GethContext*)ctx error:(NSError**)error;
@end

@interface GethFilterQuery : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (GethAddresses*)getAddresses;
- (GethBigInt*)getFromBlock;
- (GethBigInt*)getToBlock;
- (GethTopics*)getTopics;
- (void)setAddresses:(GethAddresses*)addresses;
- (void)setFromBlock:(GethBigInt*)fromBlock;
- (void)setToBlock:(GethBigInt*)toBlock;
- (void)setTopics:(GethTopics*)topics;
@end

@interface GethHash : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)initFromBytes:(NSData*)binary;
- (instancetype)initFromHex:(NSString*)hex;
- (NSData*)getBytes;
- (NSString*)getHex;
- (BOOL)setBytes:(NSData*)hash error:(NSError**)error;
- (BOOL)setHex:(NSString*)hash error:(NSError**)error;
@end

@interface GethHashes : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init:(long)size;
- (instancetype)initEmpty;
- (void)append:(GethHash*)hash;
- (GethHash*)get:(long)index error:(NSError**)error;
- (BOOL)set:(long)index hash:(GethHash*)hash error:(NSError**)error;
- (long)size;
@end

@interface GethHeader : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)initFromJSON:(NSString*)data;
- (instancetype)initFromRLP:(NSData*)data;
- (NSString*)encodeJSON:(NSError**)error;
- (NSData*)encodeRLP:(NSError**)error;
- (GethBloom*)getBloom;
- (GethAddress*)getCoinbase;
- (GethBigInt*)getDifficulty;
- (NSData*)getExtra;
- (int64_t)getGasLimit;
- (int64_t)getGasUsed;
- (GethHash*)getHash;
- (GethHash*)getMixDigest;
- (GethNonce*)getNonce;
- (int64_t)getNumber;
- (GethHash*)getParentHash;
- (GethHash*)getReceiptHash;
- (GethHash*)getRoot;
- (int64_t)getTime;
- (GethHash*)getTxHash;
- (GethHash*)getUncleHash;
- (NSString*)string;
@end

@interface GethHeaders : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (GethHeader*)get:(long)index error:(NSError**)error;
- (long)size;
@end

@interface GethInterface : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (GethAddress*)getAddress;
- (GethAddresses*)getAddresses;
- (GethBigInt*)getBigInt;
- (GethBigInts*)getBigInts;
// skipped method Interface.GetBinaries with unsupported parameter or return types

- (NSData*)getBinary;
- (BOOL)getBool;
// skipped method Interface.GetBools with unsupported parameter or return types

- (GethHash*)getHash;
- (GethHashes*)getHashes;
- (int16_t)getInt16;
- (int32_t)getInt32;
- (int64_t)getInt64;
- (int8_t)getInt8;
- (NSString*)getString;
- (GethStrings*)getStrings;
- (GethBigInt*)getUint16;
- (GethBigInt*)getUint32;
- (GethBigInt*)getUint64;
- (GethBigInt*)getUint8;
- (void)setAddress:(GethAddress*)address;
- (void)setAddresses:(GethAddresses*)addrs;
- (void)setBigInt:(GethBigInt*)bigint;
- (void)setBigInts:(GethBigInts*)bigints;
// skipped method Interface.SetBinaries with unsupported parameter or return types

- (void)setBinary:(NSData*)binary;
- (void)setBool:(BOOL)b;
// skipped method Interface.SetBools with unsupported parameter or return types

- (void)setDefaultAddress;
- (void)setDefaultAddresses;
- (void)setDefaultBigInt;
- (void)setDefaultBigInts;
- (void)setDefaultBinaries;
- (void)setDefaultBinary;
- (void)setDefaultBool;
- (void)setDefaultBools;
- (void)setDefaultHash;
- (void)setDefaultHashes;
- (void)setDefaultInt16;
- (void)setDefaultInt32;
- (void)setDefaultInt64;
- (void)setDefaultInt8;
- (void)setDefaultString;
- (void)setDefaultStrings;
- (void)setDefaultUint16;
- (void)setDefaultUint32;
- (void)setDefaultUint64;
- (void)setDefaultUint8;
- (void)setHash:(GethHash*)hash;
- (void)setHashes:(GethHashes*)hashes;
- (void)setInt16:(int16_t)n;
- (void)setInt32:(int32_t)n;
- (void)setInt64:(int64_t)n;
- (void)setInt8:(int8_t)n;
- (void)setString:(NSString*)str;
- (void)setStrings:(GethStrings*)strs;
- (void)setUint16:(GethBigInt*)bigint;
- (void)setUint32:(GethBigInt*)bigint;
- (void)setUint64:(GethBigInt*)bigint;
- (void)setUint8:(GethBigInt*)bigint;
@end

@interface GethInterfaces : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init:(long)size;
- (GethInterface*)get:(long)index error:(NSError**)error;
- (BOOL)set:(long)index object:(GethInterface*)object error:(NSError**)error;
- (long)size;
@end

@interface GethKeyStore : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init:(NSString*)keydir scryptN:(long)scryptN scryptP:(long)scryptP;
- (BOOL)deleteAccount:(GethAccount*)account passphrase:(NSString*)passphrase error:(NSError**)error;
- (NSData*)exportKey:(GethAccount*)account passphrase:(NSString*)passphrase newPassphrase:(NSString*)newPassphrase error:(NSError**)error;
- (GethAccounts*)getAccounts;
- (BOOL)hasAddress:(GethAddress*)address;
- (GethAccount*)importECDSAKey:(NSData*)key passphrase:(NSString*)passphrase error:(NSError**)error;
- (GethAccount*)importKey:(NSData*)keyJSON passphrase:(NSString*)passphrase newPassphrase:(NSString*)newPassphrase error:(NSError**)error;
- (GethAccount*)importPreSaleKey:(NSData*)keyJSON passphrase:(NSString*)passphrase error:(NSError**)error;
- (BOOL)lock:(GethAddress*)address error:(NSError**)error;
- (GethAccount*)newAccount:(NSString*)passphrase error:(NSError**)error;
- (NSData*)signHash:(GethAddress*)address hash:(NSData*)hash error:(NSError**)error;
- (NSData*)signHashPassphrase:(GethAccount*)account passphrase:(NSString*)passphrase hash:(NSData*)hash error:(NSError**)error;
- (GethTransaction*)signTx:(GethAccount*)account tx:(GethTransaction*)tx chainID:(GethBigInt*)chainID error:(NSError**)error;
- (GethTransaction*)signTxPassphrase:(GethAccount*)account passphrase:(NSString*)passphrase tx:(GethTransaction*)tx chainID:(GethBigInt*)chainID error:(NSError**)error;
- (BOOL)timedUnlock:(GethAccount*)account passphrase:(NSString*)passphrase timeout:(int64_t)timeout error:(NSError**)error;
- (BOOL)unlock:(GethAccount*)account passphrase:(NSString*)passphrase error:(NSError**)error;
- (BOOL)updateAccount:(GethAccount*)account passphrase:(NSString*)passphrase newPassphrase:(NSString*)newPassphrase error:(NSError**)error;
@end

@interface GethLog : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (GethAddress*)getAddress;
- (GethHash*)getBlockHash;
- (int64_t)getBlockNumber;
- (NSData*)getData;
- (long)getIndex;
- (GethHashes*)getTopics;
- (GethHash*)getTxHash;
- (long)getTxIndex;
@end

@interface GethLogs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (GethLog*)get:(long)index error:(NSError**)error;
- (long)size;
@end

@interface GethNode : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init:(NSString*)datadir config:(GethNodeConfig*)config;
- (GethEthereumClient*)getEthereumClient:(NSError**)error;
- (GethNodeInfo*)getNodeInfo;
- (GethPeerInfos*)getPeersInfo;
- (BOOL)start:(NSError**)error;
- (BOOL)stop:(NSError**)error;
@end

@interface GethNodeConfig : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (GethEnodes*)bootstrapNodes;
- (void)setBootstrapNodes:(GethEnodes*)v;
- (long)maxPeers;
- (void)setMaxPeers:(long)v;
- (BOOL)ethereumEnabled;
- (void)setEthereumEnabled:(BOOL)v;
- (int64_t)ethereumNetworkID;
- (void)setEthereumNetworkID:(int64_t)v;
- (NSString*)ethereumGenesis;
- (void)setEthereumGenesis:(NSString*)v;
- (long)ethereumDatabaseCache;
- (void)setEthereumDatabaseCache:(long)v;
- (NSString*)ethereumNetStats;
- (void)setEthereumNetStats:(NSString*)v;
- (BOOL)whisperEnabled;
- (void)setWhisperEnabled:(BOOL)v;
@end

@interface GethNodeInfo : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (long)getDiscoveryPort;
- (NSString*)getEnode;
- (NSString*)getID;
- (NSString*)getIP;
- (NSString*)getListenerAddress;
- (long)getListenerPort;
- (NSString*)getName;
- (GethStrings*)getProtocols;
@end

@interface GethNonce : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (NSData*)getBytes;
- (NSString*)getHex;
@end

@interface GethPeerInfo : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (GethStrings*)getCaps;
- (NSString*)getID;
- (NSString*)getLocalAddress;
- (NSString*)getName;
- (NSString*)getRemoteAddress;
@end

@interface GethPeerInfos : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (GethPeerInfo*)get:(long)index error:(NSError**)error;
- (long)size;
@end

@interface GethReceipt : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)initFromJSON:(NSString*)data;
- (instancetype)initFromRLP:(NSData*)data;
- (NSString*)encodeJSON:(NSError**)error;
- (NSData*)encodeRLP:(NSError**)error;
- (GethBloom*)getBloom;
- (GethAddress*)getContractAddress;
- (int64_t)getCumulativeGasUsed;
- (int64_t)getGasUsed;
- (GethLogs*)getLogs;
- (NSData*)getPostState;
- (GethHash*)getTxHash;
- (NSString*)string;
@end

@interface GethStrings : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (NSString*)get:(long)index error:(NSError**)error;
- (BOOL)set:(long)index str:(NSString*)str error:(NSError**)error;
- (long)size;
- (NSString*)string;
@end

@interface GethSubscription : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (void)unsubscribe;
@end

@interface GethSyncProgress : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (int64_t)getCurrentBlock;
- (int64_t)getHighestBlock;
- (int64_t)getKnownStates;
- (int64_t)getPulledStates;
- (int64_t)getStartingBlock;
@end

@interface GethTopics : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init:(long)size;
- (instancetype)initEmpty;
- (void)append:(GethHashes*)topics;
- (GethHashes*)get:(long)index error:(NSError**)error;
- (BOOL)set:(long)index topics:(GethHashes*)topics error:(NSError**)error;
- (long)size;
@end

@interface GethTransactOpts : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (GethAddress*)getFrom;
- (int64_t)getGasLimit;
- (GethBigInt*)getGasPrice;
- (int64_t)getNonce;
- (GethBigInt*)getValue;
- (void)setContext:(GethContext*)context;
- (void)setFrom:(GethAddress*)from;
- (void)setGasLimit:(int64_t)limit;
- (void)setGasPrice:(GethBigInt*)price;
- (void)setNonce:(int64_t)nonce;
- (void)setSigner:(id<GethSigner>)s;
- (void)setValue:(GethBigInt*)value;
@end

@interface GethTransaction : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init:(int64_t)nonce to:(GethAddress*)to amount:(GethBigInt*)amount gasLimit:(int64_t)gasLimit gasPrice:(GethBigInt*)gasPrice data:(NSData*)data;
- (instancetype)initFromJSON:(NSString*)data;
- (instancetype)initFromRLP:(NSData*)data;
- (NSString*)encodeJSON:(NSError**)error;
- (NSData*)encodeRLP:(NSError**)error;
- (GethBigInt*)getCost;
- (NSData*)getData;
- (GethAddress*)getFrom:(GethBigInt*)chainID error:(NSError**)error;
- (int64_t)getGas;
- (GethBigInt*)getGasPrice;
- (GethHash*)getHash;
- (int64_t)getNonce;
- (GethHash*)getSigHash;
- (GethAddress*)getTo;
- (GethBigInt*)getValue;
- (NSString*)string;
- (GethTransaction*)withSignature:(NSData*)sig chainID:(GethBigInt*)chainID error:(NSError**)error;
@end

@interface GethTransactions : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (instancetype)init;
- (GethTransaction*)get:(long)index error:(NSError**)error;
- (long)size;
@end

FOUNDATION_EXPORT const long GethLightScryptN;
FOUNDATION_EXPORT const long GethLightScryptP;
FOUNDATION_EXPORT const long GethStandardScryptN;
FOUNDATION_EXPORT const long GethStandardScryptP;

FOUNDATION_EXPORT GethBoundContract* GethBindContract(GethAddress* address, NSString* abiJSON, GethEthereumClient* client, NSError** error);

FOUNDATION_EXPORT GethBoundContract* GethDeployContract(GethTransactOpts* opts, NSString* abiJSON, NSData* bytecode, GethEthereumClient* client, GethInterfaces* args, NSError** error);

FOUNDATION_EXPORT GethEnodes* GethFoundationBootnodes(void);

FOUNDATION_EXPORT NSString* GethMainnetGenesis(void);

FOUNDATION_EXPORT GethAddress* GethNewAddressFromBytes(NSData* binary, NSError** error);

FOUNDATION_EXPORT GethAddress* GethNewAddressFromHex(NSString* hex, NSError** error);

FOUNDATION_EXPORT GethAddresses* GethNewAddresses(long size);

FOUNDATION_EXPORT GethAddresses* GethNewAddressesEmpty(void);

FOUNDATION_EXPORT GethBigInt* GethNewBigInt(int64_t x);

FOUNDATION_EXPORT GethBlock* GethNewBlockFromJSON(NSString* data, NSError** error);

FOUNDATION_EXPORT GethBlock* GethNewBlockFromRLP(NSData* data, NSError** error);

FOUNDATION_EXPORT GethCallMsg* GethNewCallMsg(void);

FOUNDATION_EXPORT GethCallOpts* GethNewCallOpts(void);

FOUNDATION_EXPORT GethContext* GethNewContext(void);

FOUNDATION_EXPORT GethEnode* GethNewEnode(NSString* rawurl, NSError** error);

FOUNDATION_EXPORT GethEnodes* GethNewEnodes(long size);

FOUNDATION_EXPORT GethEnodes* GethNewEnodesEmpty(void);

FOUNDATION_EXPORT GethEthereumClient* GethNewEthereumClient(NSString* rawurl, NSError** error);

FOUNDATION_EXPORT GethFilterQuery* GethNewFilterQuery(void);

FOUNDATION_EXPORT GethHash* GethNewHashFromBytes(NSData* binary, NSError** error);

FOUNDATION_EXPORT GethHash* GethNewHashFromHex(NSString* hex, NSError** error);

FOUNDATION_EXPORT GethHashes* GethNewHashes(long size);

FOUNDATION_EXPORT GethHashes* GethNewHashesEmpty(void);

FOUNDATION_EXPORT GethHeader* GethNewHeaderFromJSON(NSString* data, NSError** error);

FOUNDATION_EXPORT GethHeader* GethNewHeaderFromRLP(NSData* data, NSError** error);

FOUNDATION_EXPORT GethInterface* GethNewInterface(void);

FOUNDATION_EXPORT GethInterfaces* GethNewInterfaces(long size);

FOUNDATION_EXPORT GethKeyStore* GethNewKeyStore(NSString* keydir, long scryptN, long scryptP);

FOUNDATION_EXPORT GethNode* GethNewNode(NSString* datadir, GethNodeConfig* config, NSError** error);

FOUNDATION_EXPORT GethNodeConfig* GethNewNodeConfig(void);

FOUNDATION_EXPORT GethReceipt* GethNewReceiptFromJSON(NSString* data, NSError** error);

FOUNDATION_EXPORT GethReceipt* GethNewReceiptFromRLP(NSData* data, NSError** error);

FOUNDATION_EXPORT GethTopics* GethNewTopics(long size);

FOUNDATION_EXPORT GethTopics* GethNewTopicsEmpty(void);

FOUNDATION_EXPORT GethTransaction* GethNewTransaction(int64_t nonce, GethAddress* to, GethBigInt* amount, int64_t gasLimit, GethBigInt* gasPrice, NSData* data);

FOUNDATION_EXPORT GethTransaction* GethNewTransactionFromJSON(NSString* data, NSError** error);

FOUNDATION_EXPORT GethTransaction* GethNewTransactionFromRLP(NSData* data, NSError** error);

FOUNDATION_EXPORT NSString* GethRinkebyGenesis(void);

FOUNDATION_EXPORT void GethSetVerbosity(long level);

FOUNDATION_EXPORT NSString* GethTestnetGenesis(void);

@class GethFilterLogsHandler;

@class GethNewHeadHandler;

@class GethSigner;

@interface GethFilterLogsHandler : NSObject <goSeqRefInterface, GethFilterLogsHandler> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (void)onError:(NSString*)failure;
- (void)onFilterLogs:(GethLog*)log;
@end

@interface GethNewHeadHandler : NSObject <goSeqRefInterface, GethNewHeadHandler> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (void)onError:(NSString*)failure;
- (void)onNewHead:(GethHeader*)header;
@end

@interface GethSigner : NSObject <goSeqRefInterface, GethSigner> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (GethTransaction*)sign:(GethAddress*)p0 p1:(GethTransaction*)p1 error:(NSError**)error;
@end

#endif
